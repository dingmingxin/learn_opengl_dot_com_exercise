* 窗口
* 三角形和渲染管线
** 概述
在OpenGL中一切都是3D的，但是屏幕和窗口是2D的。所以OpenGL的大部分工作是和3D转换到2D相关的。OpenGL的渲染管线(graphics pipeline)负责3D坐标系转换到2D坐标系的转换.

渲染管线可以分为两部分：
1. 首先将3D坐标转换成2D坐标
2. 第二部分是将2D坐标转换为屏幕上真正要现实的像素点

一句话总结，渲染管线做的事情就是将3D坐标转换成2D像素显示在屏幕上，它的输入是3D坐标值，输出是2D像素
** 着色器初步
渲染管线分为很多步骤，这些步骤是有序的，每个步骤的输出都是下一个步骤的输入所需要的数据。这些步骤都是很专门具体的，它们都对应一个function，并且很容易的并行运行。

由于这些步骤的并行运行的特性，现代显卡有数以千计的小的处理核心, 通过在GPU为渲染管线的每个步骤运行专门的小程序，这些核心可以很快的处理渲染管线中的这些数据，而这些运行在GPU上的小程序，被称作着色器(shader)

有些着色器是可以被开发人员配置，用自定义的shader替换掉默认的shader。

着色器程序语言是OpenGL Shading Language(GLSL)
** 渲染管线步骤
*** 步骤
1. vertex shader - 顶点着色器
2. shape assembly - 图元装配
3. geometry shader - 几何着色器
4. rasterization - 光栅化
5. fragment shader - 片段着色器
6. test and blending - 测试和混合
*** 开发者可以定制的shader
顶点着色器，几何着色器，片段着色器都是可以自定义的

** 2D坐标和(2D)像素的区别
2D坐标是2D空间内一个点，这个表示是十分准确的

像素点它是屏幕/窗口的一个点的近似代表，受分辨率(resolution影响)





